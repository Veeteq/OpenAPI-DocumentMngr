openapi: 3.1.0
info:
  version: 1.0.0
  title: OpenAPI - DocumentManagement System
  termsOfService: https://example.com/terms/
  contact:
    name: Contact our support
    email: veeteq@gmail.com
    url: https://github.com/Veeteq
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  x-logo:
    url: 'https://redocly.github.io/openapi-template/logo.png'
    altText: OpenAPI example logo
  description: >
    This is an **example** API to demonstrate features of the OpenAPI
    specification.
externalDocs:
  description: "Find out how to create a GitHub repo for your OpenAPI definition."
  url: 'https://github.com/Redocly/create-openapi-repo'
tags:
  - name: Document
    description: "Describes operations on Documents."
  - name: Item
    description: "Describes operations on Items."
  - name: Account
    description: "Describes operations on Accounts."
x-tagGroups:
  - name: General
    tags:
      - Document
      - Item
      - Account
  - name: Administration
    tags:
      - Admin
servers:
  - url: https://{tenant}/api/v1
    variables:
      tenant:
        default: www
        description: Your tenant id
  - url: http://localhost/api/v1
paths:
  /v1/documents:
    $ref: 'paths/v1/documents.yaml'
  /v1/documents/{id}:
    $ref: 'paths/v1/documents_{id}.yaml'
  /v1/items:
    $ref: 'paths/v1/items.yaml'
  /v1/items/{id}:
    $ref: 'paths/v1/items_{id}.yaml'
  /v1/accounts:
    $ref: 'paths/v1/accounts.yaml'
  /v1/accounts/{id}:
    $ref: 'paths/v1/accounts_{id}.yaml'    
security:
  - basic_auth: []
components:
  securitySchemes:
    main_auth:
      description: "Example description text of the OAuth2 scheme."
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://example.com/api/oauth/dialog
          scopes:
            'read:users': read user info
            'write:users': modify or remove users
    api_key:
      description: "Example description text of the API key scheme."
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic
webhooks:
  userInfo:
    post:
      summary: New user webhook
      description: "Information about a new user in the system."
      operationId: userInfo
      tags:
        - Info
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'components/schemas/User.yaml'
      responses:
        '200':
          description: "Successfully retrieved information about a new user."
      security:
        - api_key: []
